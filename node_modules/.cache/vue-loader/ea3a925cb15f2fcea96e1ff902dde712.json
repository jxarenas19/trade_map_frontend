{"remainingRequest":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\src\\components\\topbar.vue?vue&type=template&id=6289eca4&scoped=true&","dependencies":[{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\src\\components\\topbar.vue","mtime":1590770232000},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676246665630},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676246665630},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\babel-loader\\lib\\index.js","mtime":1676246672412},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1676246679269},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676246665630},{"path":"D:\\TRABAJO\\Proyectos\\Fullstackgroup\\Vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":1676246675465}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}