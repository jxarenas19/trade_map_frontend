{"remainingRequest":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\src\\views\\pages\\competitive\\competitives.vue?vue&type=template&id=20b29849&","dependencies":[{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\src\\views\\pages\\competitive\\competitives.vue","mtime":1661196672499},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676244686969},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676244686969},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1676244696167},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1676244704634},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676244686969},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1676244699212}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}