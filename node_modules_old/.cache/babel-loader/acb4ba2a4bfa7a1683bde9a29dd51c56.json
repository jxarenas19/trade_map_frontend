{"remainingRequest":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\eslint-loader\\index.js??ref--14-0!D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\src\\helpers\\fakebackend\\fake-backend.js","dependencies":[{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\src\\helpers\\fakebackend\\fake-backend.js","mtime":1661196672162},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\babel.config.js","mtime":1661196671954},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676244686969},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1676244696167},{"path":"D:\\TRABAJO\\Proyectos\\Siouxs\\ancom\\frontend\\node_modules\\eslint-loader\\index.js","mtime":1676244690669}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gYXJyYXkgaW4gbG9jYWwgc3RvcmFnZSBmb3IgcmVnaXN0ZXJlZCB1c2VycwovLyBsZXQgdXNlcnMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd1c2VycycpKQovLyAgICAgfHwgW3sgdXNlcm5hbWU6ICJhZG1pbiIsIGVtYWlsOiAiYWRtaW5AdGhlbWVzZGVzaWduLmluIiwgcGFzc3dvcmQ6ICIxMjM0NTYiIH1dOwoKZXhwb3J0IGZ1bmN0aW9uIGNvbmZpZ3VyZUZha2VCYWNrZW5kKCkgewoKICAvLyBsZXQgcmVhbEZldGNoID0gd2luZG93LmZldGNoOwogIC8vIHdpbmRvdy5mZXRjaCA9IGZ1bmN0aW9uICh1cmwsIG9wdHMpIHsKICAvLyAgICAgY29uc29sZS5sb2codXJsKQogIC8vICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogIC8vICAgICAgICAgLy8gd3JhcCBpbiB0aW1lb3V0IHRvIHNpbXVsYXRlIHNlcnZlciBhcGkgY2FsbAogIC8vICAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgLy8KICAvLyAgICAgICAgICAgICAvLyBhdXRoZW50aWNhdGUKICAvLyAgICAgICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvYXV0aGVudGljYXRlJykgJiYgb3B0cy5tZXRob2QgPT09ICdQT1NUJykgewogIC8vICAgICAgICAgICAgICAgICAvLyBnZXQgcGFyYW1ldGVycyBmcm9tIHBvc3QgcmVxdWVzdAogIC8vICAgICAgICAgICAgICAgICBsZXQgcGFyYW1zID0gSlNPTi5wYXJzZShvcHRzLmJvZHkpOwogIC8vCiAgLy8gICAgICAgICAgICAgICAgIC8vIGZpbmQgaWYgYW55IHVzZXIgbWF0Y2hlcyBsb2dpbiBjcmVkZW50aWFscwogIC8vCiAgLy8gICAgICAgICAgICAgICAgIGxldCBmaWx0ZXJlZFVzZXJzID0gdXNlcnMuZmlsdGVyKHVzZXIgPT4gewogIC8vICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2codXNlcikKICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmVtYWlsID09PSBwYXJhbXMuZW1haWwgJiYgdXNlci5wYXNzd29yZCA9PT0gcGFyYW1zLnBhc3N3b3JkOwogIC8vICAgICAgICAgICAgICAgICB9KTsKICAvLwogIC8vICAgICAgICAgICAgICAgICBpZiAoZmlsdGVyZWRVc2Vycy5sZW5ndGgpIHsKICAvLyAgICAgICAgICAgICAgICAgICAgIC8vIGlmIGxvZ2luIGRldGFpbHMgYXJlIHZhbGlkIHJldHVybiB1c2VyIGRldGFpbHMgYW5kIGZha2Ugand0IHRva2VuCiAgLy8gICAgICAgICAgICAgICAgICAgICBsZXQgdXNlciA9IGZpbHRlcmVkVXNlcnNbMF07CiAgLy8gICAgICAgICAgICAgICAgICAgICBsZXQgcmVzcG9uc2VKc29uID0gewogIC8vICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiB1c2VyLmlkLAogIC8vICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lOiB1c2VyLnVzZXJuYW1lLAogIC8vICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IHVzZXIubmFtZSwKICAvLyAgICAgICAgICAgICAgICAgICAgICAgICBlbWFpbDogdXNlci5lbWFpbCwKICAvLyAgICAgICAgICAgICAgICAgICAgICAgICB0b2tlbjogJ2Zha2Utand0LXRva2VuJwogIC8vICAgICAgICAgICAgICAgICAgICAgfTsKICAvLyAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoeyBvazogdHJ1ZSwgdGV4dDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKEpTT04uc3RyaW5naWZ5KHJlc3BvbnNlSnNvbikpIH0pOwogIC8vICAgICAgICAgICAgICAgICB9IGVsc2UgewogIC8vICAgICAgICAgICAgICAgICAgICAgLy8gZWxzZSByZXR1cm4gZXJyb3IKICAvLyAgICAgICAgICAgICAgICAgICAgIHJlamVjdCgnVGhlc2UgY3JlZGVudGlhbHMgZG8gbm90IG1hdGNoIG91ciByZWNvcmRzLicpOwogIC8vICAgICAgICAgICAgICAgICB9CiAgLy8KICAvLyAgICAgICAgICAgICAgICAgcmV0dXJuOwogIC8vICAgICAgICAgICAgIH0KICAvLwogIC8vICAgICAgICAgICAgIC8vIGdldCB1c2VycwogIC8vICAgICAgICAgICAgIGlmICh1cmwuZW5kc1dpdGgoJy91c2VycycpICYmIG9wdHMubWV0aG9kID09PSAnR0VUJykgewogIC8vICAgICAgICAgICAgICAgICAvLyBjaGVjayBmb3IgZmFrZSBhdXRoIHRva2VuIGluIGhlYWRlciBhbmQgcmV0dXJuIHVzZXJzIGlmIHZhbGlkLCB0aGlzIHNlY3VyaXR5IGlzIGltcGxlbWVudGVkIHNlcnZlciBzaWRlIGluIGEgcmVhbCBhcHBsaWNhdGlvbgogIC8vICAgICAgICAgICAgICAgICBpZiAob3B0cy5oZWFkZXJzICYmIG9wdHMuaGVhZGVycy5BdXRob3JpemF0aW9uID09PSAnQmVhcmVyIGZha2Utand0LXRva2VuJykgewogIC8vICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7IG9rOiB0cnVlLCB0ZXh0OiAoKSA9PiBQcm9taXNlLnJlc29sdmUoSlNPTi5zdHJpbmdpZnkodXNlcnMpKSB9KTsKICAvLyAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiA0MDEgbm90IGF1dGhvcmlzZWQgaWYgdG9rZW4gaXMgbnVsbCBvciBpbnZhbGlkCiAgLy8gICAgICAgICAgICAgICAgICAgICByZWplY3QoJ1VuYXV0aG9yaXNlZCcpOwogIC8vICAgICAgICAgICAgICAgICB9CiAgLy8KICAvLyAgICAgICAgICAgICAgICAgcmV0dXJuOwogIC8vICAgICAgICAgICAgIH0KICAvLwogIC8vICAgICAgICAgICAgIC8vIGdldCB1c2VyIGJ5IGlkCiAgLy8gICAgICAgICAgICAgaWYgKHVybC5tYXRjaCgvXC91c2Vyc1wvXGQrJC8pICYmIG9wdHMubWV0aG9kID09PSAnR0VUJykgewogIC8vICAgICAgICAgICAgICAgICAvLyBjaGVjayBmb3IgZmFrZSBhdXRoIHRva2VuIGluIGhlYWRlciBhbmQgcmV0dXJuIHVzZXIgaWYgdmFsaWQsIHRoaXMgc2VjdXJpdHkgaXMgaW1wbGVtZW50ZWQgc2VydmVyIHNpZGUgaW4gYSByZWFsIGFwcGxpY2F0aW9uCiAgLy8gICAgICAgICAgICAgICAgIGlmIChvcHRzLmhlYWRlcnMgJiYgb3B0cy5oZWFkZXJzLkF1dGhvcml6YXRpb24gPT09ICdCZWFyZXIgZmFrZS1qd3QtdG9rZW4nKSB7CiAgLy8gICAgICAgICAgICAgICAgICAgICAvLyBmaW5kIHVzZXIgYnkgaWQgaW4gdXNlcnMgYXJyYXkKICAvLyAgICAgICAgICAgICAgICAgICAgIGxldCB1cmxQYXJ0cyA9IHVybC5zcGxpdCgnLycpOwogIC8vICAgICAgICAgICAgICAgICAgICAgbGV0IGlkID0gcGFyc2VJbnQodXJsUGFydHNbdXJsUGFydHMubGVuZ3RoIC0gMV0pOwogIC8vICAgICAgICAgICAgICAgICAgICAgbGV0IG1hdGNoZWRVc2VycyA9IHVzZXJzLmZpbHRlcih1c2VyID0+IHsgcmV0dXJuIHVzZXIuaWQgPT09IGlkOyB9KTsKICAvLyAgICAgICAgICAgICAgICAgICAgIGxldCB1c2VyID0gbWF0Y2hlZFVzZXJzLmxlbmd0aCA/IG1hdGNoZWRVc2Vyc1swXSA6IG51bGw7CiAgLy8KICAvLyAgICAgICAgICAgICAgICAgICAgIC8vIHJlc3BvbmQgMjAwIE9LIHdpdGggdXNlcgogIC8vICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSh7IG9rOiB0cnVlLCB0ZXh0OiAoKSA9PiBKU09OLnN0cmluZ2lmeSh1c2VyKSB9KTsKICAvLyAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAvLyAgICAgICAgICAgICAgICAgICAgIC8vIHJldHVybiA0MDEgbm90IGF1dGhvcmlzZWQgaWYgdG9rZW4gaXMgbnVsbCBvciBpbnZhbGlkCiAgLy8gICAgICAgICAgICAgICAgICAgICByZWplY3QoJ1VuYXV0aG9yaXNlZCcpOwogIC8vICAgICAgICAgICAgICAgICB9CiAgLy8KICAvLyAgICAgICAgICAgICAgICAgcmV0dXJuOwogIC8vICAgICAgICAgICAgIH0KICAvLwogIC8vICAgICAgICAgICAgIC8vIHJlZ2lzdGVyIHVzZXIKICAvLyAgICAgICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvcmVnaXN0ZXInKSAmJiBvcHRzLm1ldGhvZCA9PT0gJ1BPU1QnKSB7CiAgLy8gICAgICAgICAgICAgICAgIC8vIGdldCBuZXcgdXNlciBvYmplY3QgZnJvbSBwb3N0IGJvZHkKICAvLyAgICAgICAgICAgICAgICAgbGV0IG5ld1VzZXIgPSBKU09OLnBhcnNlKG9wdHMuYm9keSk7CiAgLy8gICAgICAgICAgICAgICAgIC8vIHZhbGlkYXRpb24KICAvLyAgICAgICAgICAgICAgICAgbGV0IGR1cGxpY2F0ZVVzZXIgPSB1c2Vycy5maWx0ZXIodXNlciA9PiB7IHJldHVybiB1c2VyLnVzZXJuYW1lID09PSBuZXdVc2VyLnVzZXJuYW1lOyB9KS5sZW5ndGg7CiAgLy8gICAgICAgICAgICAgICAgIGlmIChkdXBsaWNhdGVVc2VyKSB7CiAgLy8gICAgICAgICAgICAgICAgICAgICByZWplY3QoIlVzZXJuYW1lICciICsgbmV3VXNlci51c2VybmFtZSArICInIGlzIGFscmVhZHkgdGFrZW4iKTsKICAvLyAgICAgICAgICAgICAgICAgICAgIHJldHVybjsKICAvLyAgICAgICAgICAgICAgICAgfQogIC8vCiAgLy8gICAgICAgICAgICAgICAgIC8vIHNhdmUgbmV3IHVzZXIKICAvLyAgICAgICAgICAgICAgICAgbmV3VXNlci5pZCA9IHVzZXJzLmxlbmd0aCA/IE1hdGgubWF4KC4uLnVzZXJzLm1hcCh1c2VyID0+IHVzZXIuaWQpKSArIDEgOiAxOwogIC8vICAgICAgICAgICAgICAgICB1c2Vycy5wdXNoKG5ld1VzZXIpOwogIC8vICAgICAgICAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcnMnLCBKU09OLnN0cmluZ2lmeSh1c2VycykpOwogIC8vCiAgLy8gICAgICAgICAgICAgICAgIC8vIHJlc3BvbmQgMjAwIE9LCiAgLy8gICAgICAgICAgICAgICAgIHJlc29sdmUoeyBvazogdHJ1ZSwgdGV4dDogKCkgPT4gUHJvbWlzZS5yZXNvbHZlKCkgfSk7CiAgLy8KICAvLyAgICAgICAgICAgICAgICAgcmV0dXJuOwogIC8vICAgICAgICAgICAgIH0KICAvLwogIC8vICAgICAgICAgICAgIC8vIHBhc3MgdGhyb3VnaCBhbnkgcmVxdWVzdHMgbm90IGhhbmRsZWQgYWJvdmUKICAvLyAgICAgICAgICAgICByZWFsRmV0Y2godXJsLCBvcHRzKS50aGVuKHJlc3BvbnNlID0+IHJlc29sdmUocmVzcG9uc2UpKTsKICAvLwogIC8vICAgICAgICAgfSwgNTAwKTsKICAvLyAgICAgfSk7CiAgLy8gfQp9"},{"version":3,"names":["configureFakeBackend"],"sources":["D:/TRABAJO/Proyectos/Siouxs/ancom/frontend/src/helpers/fakebackend/fake-backend.js"],"sourcesContent":["// array in local storage for registered users\r\n// let users = JSON.parse(localStorage.getItem('users'))\r\n//     || [{ username: \"admin\", email: \"admin@themesdesign.in\", password: \"123456\" }];\r\n\r\nexport function configureFakeBackend() {\r\n\r\n    // let realFetch = window.fetch;\r\n    // window.fetch = function (url, opts) {\r\n    //     console.log(url)\r\n    //     return new Promise((resolve, reject) => {\r\n    //         // wrap in timeout to simulate server api call\r\n    //         setTimeout(() => {\r\n    //\r\n    //             // authenticate\r\n    //             if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n    //                 // get parameters from post request\r\n    //                 let params = JSON.parse(opts.body);\r\n    //\r\n    //                 // find if any user matches login credentials\r\n    //\r\n    //                 let filteredUsers = users.filter(user => {\r\n    //                     console.log(user)\r\n    //                     return user.email === params.email && user.password === params.password;\r\n    //                 });\r\n    //\r\n    //                 if (filteredUsers.length) {\r\n    //                     // if login details are valid return user details and fake jwt token\r\n    //                     let user = filteredUsers[0];\r\n    //                     let responseJson = {\r\n    //                         id: user.id,\r\n    //                         username: user.username,\r\n    //                         name: user.name,\r\n    //                         email: user.email,\r\n    //                         token: 'fake-jwt-token'\r\n    //                     };\r\n    //                     resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\r\n    //                 } else {\r\n    //                     // else return error\r\n    //                     reject('These credentials do not match our records.');\r\n    //                 }\r\n    //\r\n    //                 return;\r\n    //             }\r\n    //\r\n    //             // get users\r\n    //             if (url.endsWith('/users') && opts.method === 'GET') {\r\n    //                 // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n    //                 if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n    //                     resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users)) });\r\n    //                 } else {\r\n    //                     // return 401 not authorised if token is null or invalid\r\n    //                     reject('Unauthorised');\r\n    //                 }\r\n    //\r\n    //                 return;\r\n    //             }\r\n    //\r\n    //             // get user by id\r\n    //             if (url.match(/\\/users\\/\\d+$/) && opts.method === 'GET') {\r\n    //                 // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n    //                 if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n    //                     // find user by id in users array\r\n    //                     let urlParts = url.split('/');\r\n    //                     let id = parseInt(urlParts[urlParts.length - 1]);\r\n    //                     let matchedUsers = users.filter(user => { return user.id === id; });\r\n    //                     let user = matchedUsers.length ? matchedUsers[0] : null;\r\n    //\r\n    //                     // respond 200 OK with user\r\n    //                     resolve({ ok: true, text: () => JSON.stringify(user) });\r\n    //                 } else {\r\n    //                     // return 401 not authorised if token is null or invalid\r\n    //                     reject('Unauthorised');\r\n    //                 }\r\n    //\r\n    //                 return;\r\n    //             }\r\n    //\r\n    //             // register user\r\n    //             if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n    //                 // get new user object from post body\r\n    //                 let newUser = JSON.parse(opts.body);\r\n    //                 // validation\r\n    //                 let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\r\n    //                 if (duplicateUser) {\r\n    //                     reject(\"Username '\" + newUser.username + \"' is already taken\");\r\n    //                     return;\r\n    //                 }\r\n    //\r\n    //                 // save new user\r\n    //                 newUser.id = users.length ? Math.max(...users.map(user => user.id)) + 1 : 1;\r\n    //                 users.push(newUser);\r\n    //                 localStorage.setItem('users', JSON.stringify(users));\r\n    //\r\n    //                 // respond 200 OK\r\n    //                 resolve({ ok: true, text: () => Promise.resolve() });\r\n    //\r\n    //                 return;\r\n    //             }\r\n    //\r\n    //             // pass through any requests not handled above\r\n    //             realFetch(url, opts).then(response => resolve(response));\r\n    //\r\n    //         }, 500);\r\n    //     });\r\n    // }\r\n}"],"mappings":"AAAA;AACA;AACA;;AAEA,OAAO,SAASA,oBAAoB,GAAG;;EAEnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AAAA"}]}